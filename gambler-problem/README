Gambler’s Problem – Reinforcement Learning with Dynamic Programming 🧠

🧩 Problem Overview

A gambler has the opportunity to make bets on the outcomes of a sequence of coin flips. If the coin comes up heads, the gambler wins as many dollars as they have staked; if it is tails, they lose their stake. The game ends when the gambler reaches their goal of $100 or loses all their money. The objective is to find the optimal policy that maximizes the probability of reaching the goal. ￼ ￼

✨ Features
	•	🔁 Implementation of the Value Iteration algorithm to solve the Gambler’s Problem.
	•	📊 Visualization of the optimal policy and value function.
	•	🧩 Modular code structure for easy understanding and extension. ￼

📁 Project Structure
	•	src/: Contains the core implementation of the Gambler’s Problem and the Value Iteration algorithm.
	•	notebooks/: Jupyter notebooks for interactive exploration and visualization.
	•	generated_images/: Stores images generated from the simulations.
	•	book_images/: Contains reference images from literature for comparison.